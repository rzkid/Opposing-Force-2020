//test
#include "BaseVSShader.h"

#include "include\PassThrough_vs30.inc" 
#include "include\post_vignette_ps30.inc"
 //files generated by compiling the fxc files
 
BEGIN_VS_SHADER( Post_Vignette, "Help for Post_Vignette" ) //Begin the shader
 
	BEGIN_SHADER_PARAMS
	
	SHADER_PARAM(INNER_RADIUS, SHADER_PARAM_TYPE_FLOAT, ".38", "")
	SHADER_PARAM(OUTER_RADIUS, SHADER_PARAM_TYPE_FLOAT, "45", "")
	SHADER_PARAM( FBTEXTURE, SHADER_PARAM_TYPE_TEXTURE, "_rt_FullFrameFB", "" )

	END_SHADER_PARAMS
 


 
	SHADER_FALLBACK
	{
		return 0;
	}
 

	SHADER_INIT //initializes the shader
	{
		if( params[FBTEXTURE]->IsDefined() )
		{
			LoadTexture( FBTEXTURE );
		}
	}
 
	SHADER_DRAW
	{
		SHADOW_STATE
		{
			pShaderShadow->EnableDepthWrites( false );
			
			//pShaderShadow->EnableTexture( SHADER_TEXTURE_STAGE0, true ); //enables SHADER_TEXTURE_STAGE0
			pShaderShadow->EnableTexture( SHADER_SAMPLER0, true ); //enables SHADER_TEXTURE_STAGE0
 
			//depth writes aren't needed 
			int fmt = VERTEX_POSITION;
			//pShaderShadow->VertexShaderVertexFormat( fmt, 1, 0, 0, 0 ); //sets the vertex format for the .fxc
			pShaderShadow->VertexShaderVertexFormat( fmt, 1, 0, 0 ); //sets the vertex format for the .fxc
			pShaderShadow->SetVertexShader( "PassThrough_vs30", 0 ); //set the vertex shader
			pShaderShadow->SetPixelShader( "post_vignette_ps30" ); //set the pixel shader
			//pShaderShadow->EnableAlphaWrites( true );	
			//pShaderShadow->EnableBlending(true);
			//DECLARE_STATIC_VERTEX_SHADER( PassThrough_vs20 );
			//SET_STATIC_VERTEX_SHADER( PassThrough_vs20 );

			//DECLARE_STATIC_PIXEL_SHADER( post_nightvision_ps20 );
			//SET_STATIC_PIXEL_SHADER( post_nightvision_ps20 );

			DefaultFog();
		}

		DYNAMIC_STATE
		{
			
			float innerRadius = params[INNER_RADIUS]->GetFloatValue();
			float outerRadius = params[OUTER_RADIUS]->GetFloatValue();

			pShaderAPI->SetPixelShaderConstant(0, &innerRadius);
			pShaderAPI->SetPixelShaderConstant(1, &outerRadius);
			
			BindTexture( SHADER_SAMPLER0, FBTEXTURE, -1 );
		}
		Draw(); //draw the shader
	}
END_SHADER